---
- hosts: foo
  connection: local
  gather_facts: yes
  tasks:
    - name: Get OS Version
      debug: msg="{{ ansible_distribution }}"
    - name: Create local bin directory
      file:
        path: '{{ ansible_env.HOME }}/bin'
        owner: '{{ ansible_env.USER }}'
        state: directory
        mode: "0755"
    - block:
        - name: Escalate priviledge for brew
          ansible.builtin.command:
            cmd: /usr/bin/true
          become: yes
        - name: Install Homebrew
          ansible.builtin.shell:
            cmd: hash brew 2>/dev/null || NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        - name: Tap Jira CLI repository
          community.general.homebrew_tap:
            name: ankitpokhrel/jira-cli
            state: present
        - name: Tap emacs repository
          community.general.homebrew_tap:
            name: railwaycat/emacsmacport
            state: present
        - name: Escalate priviledge for brew
          ansible.builtin.command:
            cmd: /usr/bin/true
          become: yes
        - community.general.homebrew:
            state: latest
            update_homebrew: true
            name:
              - argocd
              - awscli
              - bash
              - bash-completion@2
              - coreutils
              - docker-compose
              - emacs-mac
              - findutils
              - gawk
              - gh
              - git
              - git-lfs
              - gnu-sed
              - gnutls
              - gunzip
              - go
              - google-chrome
              - gradle
              - grep
              - groovy
              - helm
              - htop
              - ispell
              - jenkins-lts
              - jira-cli
              - jq
              - jupyterlab
              - kube-ps1
              - kubectx
              - kubernetes-cli
              - kustomize
              - maven
              - minikube
              - ncurses
              - nmap
              - node
              - openjdk
              - openjdk@11
              - openjdk@8
              - openssl@1.1
              - p11-kit
              - packer
              - pkg-config
              - pnpm
              - pstree
              - python@3.9
              - qemu
              - shellcheck
              - shfmt
              - six
              - snappy
              - sqlite
              - telnet
              - terraform
              - tree
              - virtualenv
              - watch
              - xz
              - yarn
          when: 0 > 1
        - name: Clone dotfile repo
          ansible.builtin.git:
            repo: https://github.com/lewars/dotfiles.git
            dest: '{{ ansible_env.HOME }}/git/dotfiles'
            update: yes
        - name: Install dot file
          ansible.builtin.command:
            cmd: ./install.sh
            chdir: '{{ ansible_env.HOME }}/git/dotfiles'
            creates: '{{ ansible_env.HOME }}/.emacs'
        - name: Create a tmp dir in home directory
          ansible.builtin.file:
            path: '{{ ansible_env.HOME }}/tmp'
            state: directory
            mode: "0700"
        - name: Download and install gcloud sdk
          ansible.builtin.unarchive:
            src: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-407.0.0-darwin-x86_64.tar.gz
            dest: '{{ ansible_env.HOME }}/tmp'
            remote_src: yes
        - name: Escalate priviledge for gcloud sdk installation
          ansible.builtin.command:
            cmd: /usr/bin/true
          become: yes
        # - name: Install gcloud cli
        #   ansible.builtin.command:
        #     cmd: '{{ ansible_env.HOME }}/tmp/google-cloud-sdk/install.sh --usage-reporting false --bash-completion true --path-update true --additional-components kubectl -q'
        #   when: 0 > 1
        - name: Check if IntelliJ is installed
          ansible.builtin.command:
            cmd: test -d /Applications/IntelliJ\ IDEA.app
          register: intelljdir
          ignore_errors: yes
        - community.general.homebrew:
            state: present
            name: homebrew/cask/intellij-idea
          when: intelljdir.rc != 0
        - name: Check if iTerm is installed
          ansible.builtin.command:
            cmd: test -d /Applications/iTerm.app
          register: itermdir
          ignore_errors: yes
        - community.general.homebrew:
            state: present
            name: homebrew/cask/iterm2
          when: itermdir.rc != 0
        # - name: Check if macfuse is installed
        #   ansible.builtin.command:
        #     cmd: brew info macfuse >/dev/null
        #   register: macfuseinfo
        #   ignore_errors: yes
        # - community.general.homebrew:
        #     state: present
        #     name: homebrew/cask/macfuse
        #   when: macfuseinfo.rc != 0
        - name: Check if VLC is installed
          ansible.builtin.command:
            cmd: test -d /Applications/VLC.app
          register: vlcinfo
          ignore_errors: yes
        - community.general.homebrew:
            state: present
            name: homebrew/cask/vlc
          when: vlcinfo.rc != 0
        - name: Check if Loopback is installed
          ansible.builtin.command:
            cmd: test -d /Applications/Loopback.app
          register: loopbackdir
          ignore_errors: yes
        - community.general.homebrew:
            state: present
            name: loopback
          when: loopbackdir.rc != 0
